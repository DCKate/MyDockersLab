---
- name: Create directory
  file: path={{ item }} state=directory mode=0777
  with_items:
    - "mongod/files/"
    - "mongos/files/"

- name: Copy key file for mongo
  copy: src=files/{{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
  with_items:
    - { src: mongo-keyfile, dest: mongod/files/mongo-keyfile , mode: "0600" }
    - { src: mongo-keyfile, dest: mongos/files/mongo-keyfile , mode: "0600" }

# mongod conf
- name: Render mongo config for shard and config server
  template: 
    src: mongod.conf.j2
    dest: "mongod/files/mongod-{{ item.replica_name }}.conf"
  with_items:
    - "{{ replica_set }}"
    
# jinja2 referencd http://jinja.pocoo.org/docs/2.10/templates/#for
- name: Render replicat_set script and wait for calling rs.initiate
  template: 
    src: replica.js.j2
    dest: "mongod/files/{{ item.replica_name }}.js"
  with_items:
    - "{{ router_set.replica_conf }}"

# mongos config
- name: Clean variable
  set_fact:
    config_shards: []

- name: Generate variable for router script
  set_fact:
    config_shards: '{{ config_shards }}+["{{ item.replica_name }}/{{ item.servers | join(",") }}"]'
  with_items:
    - "{{ router_set.replica_conf }}"
  when: not item.configsvr

- name: debug value handler v3
  debug: 
    var: config_shards

- name: Generate variable for mongo config of router 
  set_fact:
    config_db: "{{ item.replica_name }}/{{ item.servers | join(',') }}"
  with_items: 
    - "{{ router_set.replica_conf }}" 
  when: item.configsvr

- name: Render conf and script for router server 
  template: 
    src: "{{ item.src }}"
    dest: "mongos/files/{{ item.dest }}"
  with_items:
    - { src: "mongos.conf.j2",dest: "mongos-{{ router_set.name }}.conf"}
    - { src: "router.js.j2",dest: "router.js"}
    - { src: "addUser.js.j2",dest: "addUser.js"}

# dockerfile for shard and config server 
- name: Render dockerfile for shard and config server
  template: 
    src: Dockerfile.rs.j2
    dest: "mongod/Dockerfile_{{ item.replica_name }}"
  with_items:
    - "{{ replica_set }}"

# - name: Clean config for shard 
#   set_fact:
#     router_item: '{{ {"replica_name": router_set.name,"port":router_set.port} }}'

# - debug: "var=router_item" 

- name: Render dockerfile for router server
  template: 
    src: Dockerfile.router.j2
    dest: "mongos/Dockerfile_{{ item.name }}"
  with_items:
    - "{{ router_set }}"
