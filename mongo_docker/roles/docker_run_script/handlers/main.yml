---
# - name: Save router image
#   command: docker save -o {{ router_set.name }}.tar {{ router_set.name }}:{{ version }} mongos/
# - name: Set master server
#   command: mongo localhost:{{ port }}/{{ db_name }} --eval "printjson(db.isMaster())"
#   when: is_master
#   register: masterout
#   listen: set role for server
#   become: yes

# - debug: "msg=masterout.stdout"

# - name: Set slave server
#   command: mongo localhost:{{ port }}/{{ db_name }} --eval "printjson(db.getMongo().setSlaveOk())"
#   when: not is_master
#   register: slaveout
#   listen: set role for server
#   become: yes

# - debug: "msg=slaveout.stdout"