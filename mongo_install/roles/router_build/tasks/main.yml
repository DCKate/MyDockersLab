---
- name: Clean server from configure
  set_fact:
    now_item: {}

- name: Get server from configure
  set_fact:
    now_item: "{{ now_item | combine( item.value ) }}"
  with_dict: "{{ rs_conf }}"
  when: inventory_hostname == item.key

- name: Create directory
  file: path={{ item }} state=directory mode=0777
  with_items:
    - "{{ ansible_env.HOME }}/opt/confile/mongodb/"
  become: yes

- name: Copy key file for mongo
  copy: src=files/{{ item.src }} dest={{ ansible_env.HOME }}/opt/confile/{{ item.name }} mode={{ item.mode }}
  with_items:
    - { src: mongo-keyfile, name: mongo-keyfile , mode: "0600" }

- name: debug value handler v1
  debug: 
    var: now_item

- name: Generate configure for shard
  set_fact:
    config_db: "{{ now_item.config_replset.config_replset_name }}/{{ now_item.config_replset.address | join(',') }}"

- name: debug value handler v2
  debug: 
    var: config_db

- name: Clean config for shard 
  set_fact:
    config_shards: []

- name: Generate variable for shard script
  set_fact:
    config_shards: '{{ config_shards }}+["{{ item.replset_name }}/{{ item.address | join(",") }}"]'
  with_items:
    "{{ now_item.replica_sets }}"

- name: debug value handler v3
  debug: 
    var: config_shards

- name: Render mongo router config 
  template: 
    src: "{{ item.src }}"
    dest: "{{ ansible_env.HOME }}/opt/confile/{{ item.dest }}"
  with_items:
    - { src: "mongos.conf.j2",dest: "mongos-{{ now_item.name }}.conf"}
    - { src: "router.js.j2",dest: "router.js"}

- name: Start router
  command: mongos --config  {{ ansible_env.HOME }}/opt/confile/mongos-{{ now_item.name }}.conf

- name: Create root user for MongoDB 
  mongodb_user:
    database: admin
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ mongodb_admin_password }}"
    login_port: "{{ now_item.port }}"
    name: "{{ now_item.admin_user }}"
    password: "{{ now_item.admin_password }}"
    roles:
      - { db: "admin", role: "userAdminAnyDatabase" }
      - { db: "admin", role: "clusterAdmin" }
    state: present

- name: run router jks
  command: mongo localhost:{{ now_item.port }} -u {{ now_item.admin_user }} -p {{ now_item.admin_password }} --authenticationDatabase "admin" {{ ansible_env.HOME }}/opt/confile/router.js