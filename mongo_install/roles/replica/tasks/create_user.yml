---
- name: Set varible for disable auth
  set_fact: 
    enable_service: false

- name: Render mongo replicat_set config 
  template: 
    src: mongod.conf.j2
    dest: "{{ ansible_env.HOME }}/opt/confile/mongod-{{ replica_name }}.conf"

- name: Start replica set for MongoDB to set user
  command: mongod --config  {{ ansible_env.HOME }}/opt/confile/mongod-{{ replica_name }}.conf

- name: Create root user for MongoDB 
  mongodb_user:
    database: admin
    login_port: "{{ port }}"
    name: "{{ mongodb_admin_user }}"
    password: "{{ mongodb_admin_password }}"
    roles:
      - { db: "admin", role: "userAdminAnyDatabase" }
      - { db: "admin", role: "root" }
    state: present

- name: Create MongoDB administrative user siteUserAdmin
  mongodb_user:
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ mongodb_admin_password }}"
    login_port: "{{ port }}"
    database: "{{ db_name }}"
    name: "{{ mongodb_user }}"
    password: "{{ mongodb_password }}"
    roles:
      - { db: "{{ db_name }}", role: "readWrite" }
    state: present

- name: Stop server to enable auth
  command: mongo localhost:{{ port }}/admin --eval "printjson(db.shutdownServer())"

# - name: Create MongoDB root user siteRootAdmin
#   mongodb_user:
#     login_port: "27017"
#     database: "admin"
#     name: "{{ mongodb_admin_user }}"
#     password: "{{ mongodb_admin_password }}"
#     roles: "root"

# - name: Create MongoDB administrative user siteUserAdmin
#   mongodb_user:
#     login_user: "{{ mongodb_admin_user }}"
#     login_password: "{{ mongodb_admin_password }}"
#     login_port: "27017"
#     database: "e-gov"
#     name: "{{ mongodb_user }}"
#     password: "{{ mongodb_password }}"
#     roles:
#       - { db: "admin", role: "readWrite" }
#       - { db: "{{ mongodb_database }}", role: "readWrite" }

