---
# if rs_conf is replica group
- name: Clean server from configure
  set_fact:
    now_item: {}

- name: Get server from configure
  set_fact:
    now_item: "{{ now_item|default({}) | combine( item.value ) }}"
  with_dict: "{{ rs_conf }}"
  when: inventory_hostname == item.key

# - name: debug value handler v2
#   debug: 
#     var: now_item

# - name: debug value handler v3 
#   debug:
#     var: 
#     - inventory_hostname
#     - ansible_hostname
#     - hostvars

# - name: Create directory
#   file: path={{ item }} state=directory mode=0777
#   with_items:
#     - "testfolder/"

# - name: Get server from configure
#   set_fact:
#     rs_items: "{{ rs_items|default({}) | combine( item.value ) }}"
#   with_dict: "{{ replica_set }}"
#   when: replica_name == item.key

# - name: Generate server unit config for replica_set 
#   set_fact:
#     rs_server_config: '{{ rs_server_config|default([]) }}+[{"_id":{{ item.value.id }},"host":"{{ item.value.address }}:{{ item.value.port }}","priority":{{ item.value.priority }}}]'
#   with_dict:
#     - "{{ rs_items }}"

# - name: Combine server for replica_set 
#   set_fact:
#     rs_config: '{{ rs_server_config | to_json }}'
  
# - name: Render replicat_set config and wait for calling rs.initiate
#   template: 
#     src: replica.js.j2
#     dest: "testfolder/{{ item.0.name }}-{{ item.1 }}.js"
#   with_subelements:
#     - "{{ hosts_set }}"
#     - ip
#   notify: debug variable

# if rs_conf is router group
- name: debug value handler v1
  debug: 
    var: now_item

- name: Generate configure for shard
  set_fact:
    config_db: "{{ now_item.config_replset.config_replset_name }}/{{ now_item.config_replset.address | join(',') }}"

- name: debug value handler v2
  debug: 
    var: config_db

- name: Clean config for shard 
  set_fact:
    config_shards: []

- name: Generate variable for shard script
  set_fact:
    config_shards: '{{ config_shards }}+["{{ item.replset_name }}/{{ item.address | join(",") }}"]'
  with_items:
    "{{ now_item.replica_sets }}"

- name: debug value handler v3
  debug: 
    var: config_shards

# - name: count our fruit
#   debug:
#     msg: "{{ item }} with index {{ my_idx }}"
#   loop:
#     - apple
#     - banana
#     - pear
#   loop_control:
#     index_var: my_idx