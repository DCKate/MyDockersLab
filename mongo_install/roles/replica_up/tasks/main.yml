---
- name: Get server from configure
  set_fact:
    now_item: "{{ item }}"
  with_dict: "{{ rs_conf }}"
  when: inventory_hostname == item.key

- name: Start replica set
  include: set_up_config.yml
  when: set_config

- name: Wait 10 seconds for decide primary server 
  command: mongo localhost:{{ now_item.value.port }} --eval "printjson(rs.status())"
  register: rs_status
  until: rs_status.stdout.find("PRIMARY") != -1
  retries: 6
  delay: 10

- name: Check master server
  command: mongo localhost:{{ now_item.value.port }} --eval "printjson(db.isMaster())"
  register: is_master
  
- debug: "msg={{is_master.stdout}}"

- name: find master server
  set_fact:
    myvalue: "{{ is_master.stdout | regex_search(regexp,'\\1') }}"
  vars:
    regexp: 'ismaster[\\":\s]+([a-z]{0,5}),'

- debug: var=myvalue

- name: Create root user for MongoDB 
  mongodb_user:
    database: admin
    login_port: "{{ now_item.value.port }}"
    name: "{{ mongodb_admin_user }}"
    password: "{{ mongodb_admin_password }}"
    roles:
      - { db: "admin", role: "userAdminAnyDatabase" }
      - { db: "admin", role: "root" }
    state: present
  when: myvalue.0 == "true"

- name: Create MongoDB user
  mongodb_user:
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ mongodb_admin_password }}"
    login_port: "{{ now_item.value.port }}"
    database: "{{ now_item.value.db_name }}"
    name: "{{ mongodb_user }}"
    password: "{{ mongodb_password }}"
    roles:
      - { db: "{{ now_item.value.db_name }}", role: "readWrite" }
    state: present
  when: myvalue.0 == "true"

# - name: Create set slave script 
#   copy:
#     content: "rs.slaveOk()"
#     dest: "{{ ansible_env.HOME }}/opt/confile/set_slave.js"
#   when: myvalue.0 == "false"

# - name: Set server SlaveOk
#   command: mongo localhost:{{ now_item.value.port }}/{{ now_item.value.db_name }} -u {{ mongodb_user }} -p {{ mongodb_password }} {{ ansible_env.HOME }}/opt/confile/set_slave.js
#   register: slaveok
#   when: myvalue.0 == "false"

# - debug: "var=slaveok"
#   when: myvalue.0 == "false"
